<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>2.3.12.RELEASE</version>
    </parent>

    <groupId>com.value.buildingblocks</groupId>
    <artifactId>building-blocks-dependencies</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <description>Parent for all Service SDK modules</description>

    <organization>
        <name>Value B.V.</name>
        <url>http://www.value.com</url>
    </organization>

    <modules>
        <module>api</module>
        <module>auth-security</module>
        <module>building-blocks-common</module>
        <module>cloud-config</module>
        <module>communication</module>
        <module>core-starter-config</module>
        <module>jwt-core</module>
        <module>internal-jwt</module>
        <module>external-jwt</module>
        <module>multi-tenancy</module>
        <module>multi-tenancy-liquibase</module>
        <module>persistence</module>
        <module>resilience</module>
        <module>service-sdk-starter-logging</module>
        <module>validation</module>
        <module>service-sdk-starter-eureka-client</module>
        <module>service-sdk-common-core</module>
        <module>service-sdk-starter-test</module>
        <module>service-sdk-starter-security</module>
        <module>service-sdk-starter-mapping</module>
        <module>service-sdk-web-client</module>
        <module>spring-security-csrf</module>
        <module>service-sdk-build-utils-maven-plugin</module>
    </modules>

    <properties>
        <!-- dependency versions -->
        <spring-cloud.version>Hoxton.SR12</spring-cloud.version>
        <commons-csv.version>11</commons-csv.version>
        <commons-io.version>2.8.0</commons-io.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commons-logging.version>1.2</commons-logging.version>
        <google.guava.version>29.0-jre</google.guava.version>
        <commons-validator.version>1.6</commons-validator.version>
        <commons.beanutils.version>1.9.4</commons.beanutils.version>
        <equalsverifier.version>3.1.13</equalsverifier.version>
        <hibernate.search.version>5.11.5.Final</hibernate.search.version>
        <org.mapstruct.version>1.4.0.Final</org.mapstruct.version>
        <logstash-logback-encoder.version>6.4</logstash-logback-encoder.version>
        <jackson-databind-nullable.version>0.2.1</jackson-databind-nullable.version>
        <swagger-annotations.version>1.6.2</swagger-annotations.version>

        <!-- other config -->
        <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
        <coverage.reports.dir>${project.build.directory}/coverage-reports</coverage.reports.dir>
        <sonar.jacoco.reportPaths>
            ${coverage.reports.dir}/jacoco.exec,${coverage.reports.dir}/jacoco-it.exec
        </sonar.jacoco.reportPaths>
        <sonar.coverage.jacoco.xmlReportPaths>
            ${project.reporting.outputDirectory}/jacoco-ut/jacoco.xml,${project.reporting.outputDirectory}/jacoco-it/jacoco.xml
        </sonar.coverage.jacoco.xmlReportPaths>
        <sonar.sources>${project.basedir}/src/main/</sonar.sources>
        <sonar.tests>${project.basedir}/src/test/</sonar.tests>
        <sonar.java.binaries>target/classes/</sonar.java.binaries>
        <sonar.exclusions>target/checkout/**,src/test/**</sonar.exclusions>
        <run.addResources>false</run.addResources>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>11</java.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <!-- The maven-compiler-plugin gives much better error messages with Javac instead of OpenJDK 11 javax.tools -->
        <maven.compiler.forceJavacCompilerUse>true</maven.compiler.forceJavacCompilerUse>
        <skip.integration.tests>false</skip.integration.tests>
        <skip.unit.tests>false</skip.unit.tests>

        <!--Plugin versions -->
        <jacoco.version>0.8.6</jacoco.version>
        <sonar-maven-plugin.version>3.7.0.1746</sonar-maven-plugin.version>
        <japicmp.plugin.version>0.14.3</japicmp.plugin.version>
        <maven-site-plugin.version>3.9.1</maven-site-plugin.version>
        <doxia-module-markdown.version>1.9.1</doxia-module-markdown.version>
        <reflow-velocity-tools.version>1.1.1</reflow-velocity-tools.version>
        <velocity.version>1.7</velocity.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Value building-blocks dependencies -->
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>auth-security</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>building-blocks-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>cloud-config</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>communication</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>core-starter-config</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>external-jwt</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>internal-jwt</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>jwt-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>multi-tenancy</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>multi-tenancy-liquibase</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>persistence</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>resilience</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>service-sdk-common-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>service-sdk-starter-eureka-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>service-sdk-starter-logging</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>service-sdk-starter-mapping</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>service-sdk-starter-security</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>service-sdk-web-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>spring-security-csrf</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>validation</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>
            <!-- Spring cloud BOM dependency -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons.beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-csv</artifactId>
                <version>${commons-csv.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-validator</groupId>
                <artifactId>commons-validator</artifactId>
                <version>${commons-validator.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-digester</artifactId>
                        <!-- BUBL-1308 -->
                        <groupId>commons-digester</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>nl.jqno.equalsverifier</groupId>
                <artifactId>equalsverifier</artifactId>
                <version>${equalsverifier.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${google.guava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-search-orm</artifactId>
                <version>${hibernate.search.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openapitools</groupId>
                <artifactId>jackson-databind-nullable</artifactId>
                <version>${jackson-databind-nullable.version}</version>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${org.mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${org.mapstruct.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- Test dependencies -->
            <dependency>
                <groupId>com.value.buildingblocks</groupId>
                <artifactId>service-sdk-starter-test</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-descriptor</id>
                            <goals>
                                <goal>attach-descriptor</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.doxia</groupId>
                            <artifactId>doxia-module-markdown</artifactId>
                            <version>${doxia-module-markdown.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>lt.velykis.maven.skins</groupId>
                            <artifactId>reflow-velocity-tools</artifactId>
                            <version>${reflow-velocity-tools.version}</version>
                        </dependency>
                        <!-- Reflow skin requires Velocity >= 1.7  -->
                        <dependency>
                            <groupId>org.apache.velocity</groupId>
                            <artifactId>velocity</artifactId>
                            <version>${velocity.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <locales>en</locales>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!--Failsafe plugin - for running integration tests-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the VM argument line used when integration tests are run. -->
                            <!-- Since Version 2.17 using @{...} allows late replacement of properties when the plugin is
                            executed, so properties that have been modified by other plugins will be picked up correctly. -->
                            <argLine>@{failsafeArgLine}</argLine>
                            <skipTests>${skip.integration.tests}</skipTests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <doclint>none</doclint>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
            </plugin>
            <!-- Surefire plugin - for running unit tests-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M4</version>
                <configuration>
                    <!-- Sets the VM argument line used when unit tests are run. -->
                    <!-- Since Version 2.17 using @{...} allows late replacement of properties when the plugin is
                    executed, so properties that have been modified by other plugins will be picked up correctly. -->
                    <argLine>@{surefireArgLine}</argLine>
                    <skipTests>${skip.unit.tests}</skipTests>
                    <!-- Excludes integration tests when unit tests are run. -->
                    <excludes>
                        <exclude>**/*IT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <release>${java.version}</release>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${coverage.reports.dir}/jacoco.exec</destFile>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run. -->
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>${coverage.reports.dir}/jacoco.exec</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut
                            </outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${coverage.reports.dir}/jacoco-it.exec</destFile>
                            <propertyName>failsafeArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>${coverage.reports.dir}/jacoco-it.exec</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-it
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>javadoc</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
